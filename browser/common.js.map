{"version":3,"sources":["./src/app/shared/services/helper.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;AACK;;AAKzC,MAAM,aAAa;IAGxB;QAFA,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QACxB,qBAAgB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEjB,aAAa;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,CAAK;QACjB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAGD,sBAAsB;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC9B,CAAC;IAED,sBAAsB,CAAC,GAAO;QAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC;;0EArBS,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  subject = new Subject();\n  behaviourSubject = new BehaviorSubject(null);\n  constructor() { }\n\n  getObservable() {\n    return this.subject;\n  }\n\n  setObservable(d:any) {\n    console.log(\"Next called:\", d);\n    this.subject.next(d);\n  }\n\n\n  getBehaviourObservable(){\n    return this.behaviourSubject;\n   }\n \n   setBehaviourObservable(obj:any) {\n    this.behaviourSubject.next(obj)\n   }\n \n\n}\n"],"sourceRoot":"webpack:///"}